## This is a directory/file filter for WinMerge 
## This filter lets through only files ASP.NET developers care about 
name: Visual Studio Files
desc: Ignore Visual Studio temporary files, build results, and files generated by popular Visual Studio add-ons.

## This is an inclusive (loose) filter
## (it lets through everything not specified)
def: include


## Filters for filenames begin with f: 
## Filters for directories begin with d: 
## (Inline comments begin with " ##" and extend to the end of the line) 

## f: \.bzrignore$ ## Bazaar ignore file
## f: \.cvsignore$ ## CVS ignore file
## f: \.gitignore$ ## Git ignore file
## f: \.hgignore$ ## Mercurial ignore file
## f: \.svnignore$ ## Subversion ignore file

f: \.(vs[sp])?scc$  ## Visual SourceSafe files

d: \\\.svn$ ## Subversion working copy
d: \\_svn$  ## Subversion working copy ASP.NET Hack
d: \\cvs$   ## CVS control directory
d: \\\.git$ ## Git directory
d: \\\.bzr$ ## Bazaar branch
d: \\\.hg$ ## Mercurial repository

## from https://raw.githubusercontent.com/github/gitignore/master/VisualStudio.gitignore
## User-specific files
f: \.rsuser$
f: \.suo$
f: \.user$
f: \.userosscache$
f: \.sln\.docstates$

## User-specific files (MonoDevelop/Xamarin Studio)
f: \.userprefs$

## Mono auto generated files
f: ^mono_crash\.

## Build results
d: \\[Dd]ebug$
d: \\[Dd]ebugPublic$
d: \\[Rr]elease$
d: \\[Rr]eleases$
d: \\x64$
d: \\x86$
d: \\[Ww][Ii][Nn]32$
d: \\[Aa][Rr][Mm]$
d: \\[Aa][Rr][Mm]64$
d: \\bld$
d: \\[Bb]in$
d: \\[Oo]bj$
d: \\[Ll]og$
d: \\[Ll]ogs$

## Visual Studio 2015/2017 cache/options directory
d: \\\.vs$
## Uncomment if you have tasks that create the project's static files in wwwroot
##d: \\wwwroot$

## Visual Studio 2017 auto generated files
d: \\Generated Files$

## MSTest test Results
d: \\[Tt]est[Rr]esult.*
f: ^[Bb]uild[Ll]og\.

## NUnit
f: \.VisualState\.xml$
f: ^TestResult\.xml$
f: ^nunit-.*\.xml$

## Build Results of an ATL Project
d: \\[Dd]ebugPS$
d: \\[Rr]eleasePS$
f: ^dlldata\.c$

## Benchmark Results
d: \\BenchmarkDotNet\.Artifacts$

## .NET Core
f: ^project\.lock\.json$
f: ^project\.fragment\.lock\.json$
d: \\artifacts$

## ASP.NET Scaffolding
f: ^ScaffoldingReadMe\.txt$

## StyleCop
f: ^StyleCopReport\.xml$

## Files built by Visual Studio
f: _i\.c$
f: _p\.c$
f: _h\.h$
f: \.ilk$
f: \.meta$
f: \.obj$
f: \.iobj$
f: \.pch$
f: \.pdb$
f: \.ipdb$
f: \.pgc$
f: \.pgd$
f: \.rsp$
f: \.sbr$
f: \.tlb$
f: \.tli$
f: \.tlh$
f: \.tmp$
f: \.tmp_proj$
f: _wpftmp\.csproj$
f: \.log$
f: \.vspscc$
f: \.vssscc$
d: \\\.builds$
f: \.pidb$
f: \.svclog$
f: \.scc$

## Chutzpah Test files
f: ^_Chutzpah

## Visual C++ cache files
d: \\ipch$
f: \.aps$
f: \.ncb$
f: \.opendb$
f: \.opensdf$
f: \.sdf$
f: \.cachefile$
f: \.VC\.db$
f: \.VC\.VC\.opendb$

## Visual Studio profiler
f: \.psess$
f: \.vsp$
f: \.vspx$
f: \.sap$

## Visual Studio Trace Files
f: \.e2e$

## TFS 2012 Local Workspace
d: \\\$tf$

## Guidance Automation Toolkit
f: \.gpState$

## ReSharper is a .NET coding add-in
d: \\_ReSharper.*
f: \.[Rr]e[Ss]harper$
f: \.DotSettings\.user$

## TeamCity is a build add-in
f: ^_TeamCity.*

## DotCover is a Code Coverage Tool
f: \.dotCover$

## AxoCover is a Code Coverage Tool
d: \\\.axoCover$
##!.axoCover/settings.json ##(WinMerge not supported)

## Coverlet is a free, cross platform Code Coverage Tool
f: ^coverage.*\.json$
f: ^coverage.*\.xml$
f: ^coverage.*\.info$

## Visual Studio code coverage results
f: \.coverage$
f: \.coveragexml$

## NCrunch
f: ^_NCrunch_.*
f: ^\..*crunch.*\.local\.xml$
f: ^nCrunchTemp_.*

## MightyMoose
f: .*\.mm\..*
d: \\AutoTest\.Net$

## Web workbench (sass)
d: \\\.sass-cache$

## Installshield output folder
d: \\[Ee]xpress$

## DocProject is a documentation generator add-in
d: \\DocProject\\buildhelp$
f: \.HxT$
f: \.HxC$
f: \.hhc$
f: \.hhk$
f: \.hhp$
d: \\DocProject\\Help\\Html2$
d: \\DocProject\\Help\\html$

## Click-Once directory
d: \\publish$

## Publish Web Output
f: \.[Pp]ublish\.xml$
f: \.azurePubxml$
## Note: Comment the next line if you want to checkin your web deploy settings,
## but database connection strings (with potential passwords) will be unencrypted
f: \.pubxml$
f: \.publishproj$

## Microsoft Azure Web App publish settings. Comment the next line if you want to
## checkin your Azure Web App publish settings, but sensitive information contained
## in these scripts will be unencrypted
d: \\PublishScripts$

## NuGet Packages
f: \.nupkg$
## NuGet Symbol Packages
f: \.snupkg$
## The packages folder can be ignored because of Package Restore
d: \\[Pp]ackages$
## except build/, which is used as an MSBuild target.
##!**/[Pp]ackages/build/ ##(WinMerge not supported)
## Uncomment if necessary however generally it will be regenerated when needed
##!**/[Pp]ackages/repositories.config ##(WinMerge not supported)
## NuGet v3's project.json files produces more ignorable files
f: \.nuget\.props$
f: \.nuget\.targets$

## Microsoft Azure Build Output
d: \\csx$
f: \.build\.csdef$

## Microsoft Azure Emulator
d: \\ecf$
d: \\rcf$

## Windows Store app package directories and files
d: \\AppPackages$
d: \\BundleArtifacts$
f: ^Package\.StoreAssociation\.xml$
f: ^_pkginfo\.txt$
f: \.appx$
f: \.appxbundle$
f: \.appxupload$

## Visual Studio cache files
## files ending in .cache can be ignored
f: \.[Cc]ache$
## but keep track of directories ending in .cache
##!?*.[Cc]ache/ ##(WinMerge not supported)

## Others
d: \\ClientBin$
f: ^~\$
f: ~$
f: \.dbmdl$
f: \.dbproj\.schemaview$
f: \.jfm$
f: \.pfx$
f: \.publishsettings$
f: ^orleans\.codegen\.cs$

## Including strong name files can present a security risk
## (https://github.com/github/gitignore/pull/2483#issue-259490424)
##f: \.snk$

## Since there are multiple workflows, uncomment next line to ignore bower_components
## (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
##d: \\bower_components$

## RIA/Silverlight projects
d: \\Generated_Code$

## Backup & report files from converting an old project file
## to a newer Visual Studio version. Backup files are not needed,
## because we have git ;-)
d: \\_UpgradeReport_Files$
d: \\Backup.*
f: ^UpgradeLog.*\.XML$
f: ^UpgradeLog.*\.htm$
d: \\ServiceFabricBackup$
f: \.rptproj\.bak$

## SQL Server files
f: \.mdf$
f: \.ldf$
f: \.ndf$

## Business Intelligence projects
f: \.rdl\.data$
f: \.bim\.layout$
f: \.bim_.*\.settings$
f: \.rptproj\.rsuser$
f: - [Bb]ackup\.rdl$
f: - [Bb]ackup ([0-9])\.rdl$
f: - [Bb]ackup ([0-9][0-9])\.rdl$

## Microsoft Fakes
d: \\FakesAssemblies$

## GhostDoc plugin setting file
f: \.GhostDoc\.xml$

## Node.js Tools for Visual Studio
f: \.ntvs_analysis\.dat$
d: \\node_modules$

## Visual Studio 6 build log
f: \.plg$

## Visual Studio 6 workspace options file
f: \.opt$

## Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
f: \.vbw$

# Visual Studio LightSwitch build output
d: \\.*.HTMLClient\\GeneratedArtifacts$
d: \\.*.DesktopClient\\GeneratedArtifacts$
f: ^ModelManifest.xml$
d: \\.*.Server\\GeneratedArtifacts$
f: ^ModelManifest.xml$
d: \\_Pvt_Extensions$

## Paket dependency manager
##.paket/paket.exe ##(WinMerge not supported)
d: \\paket-files$

## FAKE - F# Make
d: \.fake$

## CodeRush personal settings
d: \\\.cr\\personal$

## Python Tools for Visual Studio (PTVS)
d: \\__pycache__$
f: \.pyc$

## Cake - Uncomment if you are using it
##d: \\tools$
##!tools/packages.config ##(WinMerge not supported)

## Tabs Studio
f: \.tss$

## Telerik's JustMock configuration file
f: \.jmconfig$

## BizTalk build output
f: \.btp\.cs$
f: \.btm\.cs$
f: \.odx\.cs$
f: \.xsd\.cs$

## OpenCover UI analysis results
d: \\OpenCover$

## Azure Stream Analytics local run output
d: \\ASALocalRun$

## MSBuild Binary and Structured Log
f: \.binlog$

## NVidia Nsight GPU debugger configuration file
f: \.nvuser$

## MFractors (Xamarin productivity tool) working folder
d: \\\.mfractor$

## Local History for Visual Studio
d: \\\.localhistory$

## BeatPulse healthcheck temp database
f: ^healthchecksdb$

## Backup folder for Package Reference Convert tool in Visual Studio 2017
d: \\MigrationBackup$

## Ionide (cross platform F# VS Code tools) working folder
d: \\\.ionide$

## Fody - auto-generated XML schema
f: ^FodyWeavers\.xsd$
